version: "2"
linters:
  enable:
    - asciicheck
    - bodyclose
    - cyclop
    - durationcheck
    - err113
    - errname
    - errorlint
    - forcetypeassert
    - gocognit
    - gocritic
    - goprintffuncname
    - gosec
    - nakedret
    - nestif
    - nilerr
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - revive
    - staticcheck
    - thelper
    - tparallel
    - unconvert
    - unparam
    - varnamelen
    - wrapcheck
    - wsl_v5
  disable:
    - rowserrcheck
    - sqlclosecheck
    - wastedassign
  settings:
    gocognit:
      min-complexity: 15
    nakedret:
      max-func-lines: 0
    nolintlint:
      require-explanation: true
      require-specific: true
      allow-unused: false
    varnamelen:
      check-return: true
      ignore-type-assert-ok: true
      ignore-map-index-ok: true
      ignore-chan-recv-ok: true
      ignore-decls:
        - ok bool
        - is *is.I
        - t testing.T
        - t testingTOrB
    wrapcheck:
      ignore-sigs:
        - .Errorf(
        - errors.New(
        - errors.Unwrap(
        - .Wrap(
        - .Wrapf(
        - .WithMessage(
        - .WithMessagef(
        - .WithStack(
        - .Err()
      ignore-package-globs:
        - github.com/blizzy78/textsimilarity*
        - golang.org/x/sync/errgroup*
        - github.com/hashicorp/go-multierror*
        - github.com/magefile/mage*
  exclusions:
    generated: lax
    rules:
      # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      # golint: False positive when tests are defined in package 'test'
      - path: (.+)\.go$
        text: func name will be used as test\.Test.* by other packages, and that stutters; consider calling this
      # gosec: Duplicated errcheck checks
      - path: (.+)\.go$
        text: G104
      # gosec: Too many issues in popular repos
      - path: (.+)\.go$
        text: (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
      # gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
      - path: (.+)\.go$
        text: Potential file inclusion via variable
    paths:
      - third_party$
      - builtin$
      - examples$
      - levenshtein/levenshtein.go
formatters:
  enable:
    - gofmt
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
